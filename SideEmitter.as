package{	import flash.display.Bitmap;	import flash.display.DisplayObject;	import flash.display.SpreadMethod;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.filters.BlurFilter;	import flash.geom.Point;	import flash.utils.Timer;		import org.flintparticles.common.actions.Age;	import org.flintparticles.common.actions.Fade;	import org.flintparticles.common.actions.ScaleImage;	import org.flintparticles.common.counters.Pulse;	import org.flintparticles.common.counters.Random;	import org.flintparticles.common.counters.ZeroCounter;	import org.flintparticles.common.displayObjects.Star;	import org.flintparticles.common.initializers.AlphaInit;	import org.flintparticles.common.initializers.ApplyFilter;	import org.flintparticles.common.initializers.ImageClass;	import org.flintparticles.common.initializers.Lifetime;	import org.flintparticles.twoD.actions.DeathZone;	import org.flintparticles.twoD.actions.MatchVelocity;	import org.flintparticles.twoD.actions.Move;	import org.flintparticles.twoD.actions.RandomDrift;	import org.flintparticles.twoD.emitters.Emitter2D;	import org.flintparticles.twoD.initializers.Position;	import org.flintparticles.twoD.initializers.Velocity;	import org.flintparticles.twoD.renderers.DisplayObjectRenderer;	import org.flintparticles.twoD.zones.RectangleZone;		import utils.Utils;	import flash.filters.DropShadowFilter;		public class SideEmitter extends Sprite	{				/*[Embed(source="../assets/WhiteRadial25px.png")]			private var WhiteRadial25:Class;								[Embed(source="../assets/genericCloud.png")]			private var GenericCloud2:Class;*/				private var sq:Sprite;				private var renderer:DisplayObjectRenderer;		private var emitter:Emitter2D;		private var particlesLimit:uint = 300; 		private var rolloverObject:DisplayObject;		private var deathZone:DeathZone;		private var emitting:Boolean;				private var stopTimer:Timer;				private var emitterW:Number;		private var emitterH:Number;				private var dispSprite:Sprite;		private var startTimer:Timer;		private var mainEmitter:Boolean;				private var moveTimer:Timer;				private var strtDelay:Number;						public function SideEmitter(w:Number, h:Number, dela:Number = 0, main:Boolean = false)		{			mainEmitter = main			emitterW = w;			emitterH = h;			strtDelay = dela;			init();		}				private function init():void{					/*	dispSprite = new Sprite();			dispSprite.graphics.beginFill(0x0,0);			dispSprite.graphics.lineStyle(1, Math.random()+0xffffff);			dispSprite.graphics.drawRect(0,0,emitterW, emitterH);			addChild(dispSprite);  */						renderer = new DisplayObjectRenderer();			addChild(renderer);			emitter = new Emitter2D();			renderer.addEmitter(emitter);			addEventListener(Event.ADDED_TO_STAGE, initEmitter);			initEmitter();			if (mainEmitter){				moveTimer = new Timer(3000, 0);				moveTimer.addEventListener(TimerEvent.TIMER,moveListener);				moveTimer.start();			}		}				public function moveListener(t:TimerEvent):void		{			emitter.y = Utils.ranRange(30,600);			trace("moved emitter to:"+emitter.y);		}				private function initEmitter(e:Event = null):void{			emitter.addInitializer(new Lifetime(28, 30));			var randomDrift:RandomDrift = new RandomDrift(1, 1);						var dzone:RectangleZone;						if (mainEmitter){				trace("MAIN EMITTER CREATED");				dzone = new RectangleZone( -50, -50, 700, 700 );			}else{				dzone = new RectangleZone( 300, -10, 300, 250 );			}									deathZone = new DeathZone( dzone, true );					//	emitter.addAction( deathZone );			//emitter.counter =  new TimePeriod(10, .5);			emitter.counter = new Pulse(Utils.ranRange(8, 14), 20);// new Random(10,14);		//	emitter.addInitializer( new ApplyFilter( new BlurFilter( 30, 10, 3)));		//	emitter.addInitializer( new ApplyFilter( new DropShadowFilter(14, 45, 0xffffff, .3, 32, 32, 15, BitmapFilterQuality.HIGH, false, false, false));		//	(14, 45, 0xffffff, .3, 32, 32, 15, BitmapFilterQuality.HIGH, false, false, true)			emitter.addInitializer(new AlphaInit(0.3, .5));			emitter.addInitializer( new ImageClass(WhiteRadial));											///SET THE IMAGE CLASS USED FOR EACH PARTICLE			emitter.addInitializer(new Position(new RectangleZone(0,0,emitterW, emitterH)));			emitter.addInitializer( new Velocity(new RectangleZone(-50, 0, -20, 0))); // add movement to the left (actioned by wind)	//		emitter.addAction(new ScaleImage(.2, .2));			//emitter.addAction(new TurnTowardsPoint(400, 600, 100));			emitter.addAction(new MatchVelocity(80, 50));			//gravityWell = new GravityWell(1000, 300, 50, 20);			emitter.addAction(new Age());			randomDrift = new RandomDrift(10, 0);			emitter.addAction(randomDrift);		//	emitter.addAction(new Fade(1,.5));				emitter.addAction(new Move());			startTimer = new Timer(strtDelay, 1);			startTimer.addEventListener(TimerEvent.TIMER_COMPLETE, startEmitting);			startTimer.start();//			startEmitting();		}				private function startEmitting(t:TimerEvent = null):void{			emitter.start();		}				public function stopEmitter():void{			emitter.counter = new ZeroCounter();		}		public function destroy():void{					}			}}